@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject NetworkService NetworkService
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <a href="authentication/profile" class="nav-link btn btn-link">
            Hello, @context.User.Identity.Name!
        </a>
        <button class="nav-link btn btn-link" @onclick="BeginSignOut">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="@(this.NetworkService.IsOnline ? "authentication/login" : "#")">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code{
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        NetworkService.OnlineChanged += (s, e) => InvokeAsync(StateHasChanged);
    }
}
